trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'azure-resources-connection'
        repository: 'lanaradmilovic/taskservice'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: '$(tag)'

- stage: Terraform
  displayName: Terraform Apply
  jobs:
  - job: Terraform
    displayName: Apply Terraform
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: TerraformInstaller@0
      inputs:
        terraformVersion: 'latest'

    - task: TerraformTaskV2@0
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
        environmentServiceNameAzureRM: 'azure-resources-connection'

    - task: TerraformTaskV2@0
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
        environmentServiceNameAzureRM: 'azure-resources-connection'
        vars: |
          docker_image=lanaradmilovic/taskservice:$(tag)

- stage: Ansible
  displayName: Ansible Playbook Execution
  jobs:
  - job: Ansible
    displayName: Run Ansible Playbook
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AnsibleInstaller@0
      inputs:
        ansibleVersion: 'latest'

    - script: |
        ansible-playbook -i ansible/ansible_hosts ansible/01-playbook.yml --extra-vars "docker_image=lanaradmilovic/taskservice:$(tag)"
      displayName: 'Run Ansible Playbook'
